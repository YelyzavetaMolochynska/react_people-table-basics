{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonRow/PersonRow.tsx","components/PeopleList/PeopleList.tsx","api.ts","pages/PeoplePage.tsx","pages/PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","to","slug","classNames","sex","name","PersonRow","motherIs","fatherIs","born","died","fatherName","motherName","currSlug","useParams","personSlug","checkMotherName","checkFatherName","PeopleList","people","map","find","human","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","loadError","setLoadError","fetchPeople","peopleFromServer","useEffect","length","PageNavLink","text","isActive","NavBar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.956b4fb0.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person,\n  motherIs: Person | null,\n  fatherIs: Person | null,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person, motherIs, fatherIs }) => {\n  const {\n    sex,\n    slug,\n    born,\n    died,\n    fatherName,\n    motherName,\n  } = person;\n  const { personSlug: currSlug } = useParams();\n\n  const checkMotherName = motherName || '-';\n  const checkFatherName = fatherName || '-';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === currSlug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {!motherIs ? (\n          checkMotherName\n        ) : (\n          <PersonLink person={motherIs} />\n        )}\n      </td>\n\n      <td>\n        {!fatherIs ? (\n          checkFatherName\n        ) : (\n          <PersonLink person={fatherIs} />\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonRow } from '../PersonRow';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonRow\n            key={person.slug}\n            person={person}\n            motherIs={people.find(\n              human => human.name === person.motherName,\n            ) || null}\n            fatherIs={people.find(\n              human => human.name === person.fatherName,\n            ) || null}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleList } from '../components/PeopleList';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadError, setLoadError] = useState(false);\n\n  const fetchPeople = async () => {\n    try {\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch (error) {\n      setLoadError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {loadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length ? (\n            !loadError && !isLoading && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n          ) : (\n            <PeopleList\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../../pages/PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home page</h1>}\n            />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n              <Route\n                path=\":personSlug\"\n                element={<PeoplePage />}\n              />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}